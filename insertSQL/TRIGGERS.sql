CREATE OR REPLACE TRIGGER org_insert_trigger
AFTER INSERT ON ORGANIZATIONS
FOR EACH ROW
DECLARE
  v_log_id NUMBER;
BEGIN
  -- Insert a record into the LOGS table
  INSERT INTO LOGS (TIMESTAMP_COL, LOG_MESSAGE, TYPE, ACTION, OUTCOME)
  VALUES (CURRENT_TIMESTAMP,:NEW.TYPE ||' '|| :NEW.ORGANIZATION_ID || ' ' ||:NEW.NAME || ' Inserted','ORGANIZATION', 'INSERT', 'SUCCESSFUL')
  RETURNING LOG_ID INTO v_log_id;

  -- Insert a record into the ORGANIZATION_LOGS table
  INSERT INTO ORGANIZATION_LOGS (LOG_ID, ORGANIZATION_ID, ORGANIZATION_TYPE)
  VALUES (v_log_id, :NEW.ORGANIZATION_ID, :NEW.TYPE);
END org_insert_trigger;
/

CREATE OR REPLACE TRIGGER check_negative_stock
BEFORE UPDATE OF CENTRAL_STOCK ON PRODUCTS
FOR EACH ROW
DECLARE
  v_new_stock NUMBER;
BEGIN
  -- Retrieve the new stock value from the updated row
  v_new_stock := :NEW.CENTRAL_STOCK;

  -- Check if the new stock is less than 0
  IF v_new_stock < 0 THEN
    -- Raise an error with a custom message
    RAISE_APPLICATION_ERROR(-20001, 'Central Stock cannot be updated to a value less than 0.');
  END IF;
END check_negative_stock;
/



CREATE OR REPLACE TRIGGER BEFORE_DELETE_ORGANIZATION
BEFORE DELETE ON ORGANIZATIONS
FOR EACH ROW
DECLARE

COUNTER NUMBER;
PENDING_TRANSACTIONS NUMBER;
 v_log_message VARCHAR2(255); 
 
BEGIN
  
	SELECT COUNT(*) INTO COUNTER FROM ORGANIZATION_BACKUP WHERE NAME=:OLD.NAME;
	/*SELECT COUNT(*) INTO PENDING_TRANSACTIONS FROM PRODUCT_TRANSACTIONS WHERE COUNTERPARTY_ID=:OLD.ORGANIZATION_ID AND UPPER(STATUS)='PENDING';
	
	IF PENDING_TRANSACTIONS<>0 THEN
	INSERT INTO LOGS (TIMESTAMP_COL, LOG_MESSAGE,TYPE)
    VALUES (CURRENT_TIMESTAMP,:OLD.TYPE ||' ' ||:OLD.ORGANIZATION_ID||' '|| :OLD.NAME || ' DELETE FAILED','DELETE');
		 --RAISE_APPLICATION_ERROR(-20001, 'deletion stopped. Organization has pending transactions.');
	 end if;
	*/
	IF COUNTER=0 THEN
	INSERT INTO ORGANIZATION_BACKUP(NAME,URL,TYPE) VALUES (:OLD.NAME, :OLD.URL,:OLD.TYPE);
	ELSE
	UPDATE ORGANIZATION_BACKUP SET DELETE_TIME=CURRENT_TIMESTAMP;
	END IF;
	 v_log_message := :OLD.TYPE ||' ' || :OLD.NAME || ' DELETED';

    -- Insert data into the LOGS table
    INSERT INTO LOGS (TIMESTAMP_COL, LOG_MESSAGE,TYPE,ACTION,OUTCOME)
    VALUES (CURRENT_TIMESTAMP, v_log_message,'ORGANIZATION','DELETE','SUCCESSFUL');
	
END;
/

