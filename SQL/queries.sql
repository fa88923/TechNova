SELECT B.BRANCH_ID, O.NAME, B.MANAGER, STREET_ADDRESS||', '||CITY||'-'||POSTAL_CODE BRANCH_ADDRESS FROM
                ORGANIZATIONS O JOIN BRANCHES B ON (O.ORGANIZATION_ID=B.BRANCH_ID)
                LEFT OUTER JOIN LOCATIONS L ON (O.ORGANIZATION_ID=L.ORGANIZATION_ID)
                WHERE UPPER(NAME) LIKE :searchPattern OR UPPER(STREET_ADDRESS) LIKE :searchPattern 
                OR UPPER(CITY) LIKE :searchPattern
                OR UPPER(POSTAL_CODE) LIKE :searchPattern 
                OR UPPER(COUNTRY) LIKE :searchPattern OR UPPER(MANAGER) LIKE :searchPattern
                ORDER BY O.ORGANIZATION_ID`
								
								
								SELECT B.BRANCH_ID, O.NAME, B.MANAGER, STREET_ADDRESS||', '||CITY||'-'||POSTAL_CODE BRANCH_ADDRESS,LOG.ACTION|| ' on ' ||LOG.TIMESTAMP_COL L_MSG
                FROM
                ORGANIZATIONS O JOIN BRANCHES B ON (O.ORGANIZATION_ID=B.BRANCH_ID)
                LEFT OUTER JOIN LOCATIONS L ON (O.ORGANIZATION_ID=L.ORGANIZATION_ID)
								LEFT OUTER JOIN(SELECT * FROM LOGS LO LEFT OUTER JOIN ORGANIZATION_LOGS OLO ON (LO.LOG_ID=OLO.LOG_ID)
								WHERE LO.TIMESTAMP_COL>=ALL(SELECT TIMESTAMP_COL FROM  LOGS LO1 LEFT OUTER JOIN ORGANIZATION_LOGS OLO1 ON (LO1.LOG_ID=OLO1.LOG_ID) 								WHERE OLO1.ORGANIZATION_ID=OLO.ORGANIZATION_ID))LOG ON (B.BRANCH_ID=LOG.ORGANIZATION_ID)
                ORDER BY O.ORGANIZATION_ID
								
								
								SELECT B.BRANCH_ID,O.NAME, B.MANAGER,STREET_ADDRESS||\', \'||CITY||\'-\'||POSTAL_CODE ADDRESS,B.SQUARE_FOOTAGE,B.AVG_SHIPPING_DURATION,P.ACCOUNT_NUMBER,P.ACCOUNT_HOLDER,P.BANK_NAME,P.IBAN FROM ORGANIZATIONS O JOIN BRANCHES B ON (O.ORGANIZATION_ID=B.BRANCH_ID) LEFT OUTER JOIN LOCATIONS L ON (O.ORGANIZATION_ID=L.ORGANIZATION_ID) LEFT OUTER JOIN PAYMENT_INFO P ON (B.BRANCH_ID=P.OWNER_ID) WHERE B.BRANCH_ID=:branchId ORDER BY B.BRANCH_ID
								
								SELECT * FROM CONTACTS WHERE OWNER_ID = :branchId AND UPPER(TYPE) = \'PHONE_NUMBER\' ORDER BY VALUE
								
								SELECT * FROM CONTACTS WHERE OWNER_ID = :branchId AND UPPER(TYPE) = \'EMAIL\' ORDER BY VALUE
								
								SELECT O.NAME,B.BRANCH_ID FROM ORGANIZATIONS O JOIN BRANCHES B ON (O.ORGANIZATION_ID=B.BRANCH_ID) WHERE B.BRANCH_ID=:branchId
								
								SELECT * FROM BRANCH_INCOME_STATEMENT WHERE EXTRACT(MONTH FROM START_DATE) = :month AND EXTRACT(YEAR FROM START_DATE) = :year AND BRANCH_ID = :branchId
								
								SELECT * FROM BRANCH_INCOME_STATEMENT where  EXTRACT(YEAR FROM START_DATE)=:year AND BRANCH_ID=:branchId
								
								SELECT * FROM BRANCH_INCOME_STATEMENT WHERE BRANCH_ID=:branchId
								
								SELECT DISTINCT PT.TRANSACTION_ID,O.NAME, PT.STATUS, FT.STATUS AS PAYMENT_STATUS, S2.STATUS AS SHIPMENT_STATUS
                FROM PRODUCT_TRANSACTIONS PT LEFT OUTER JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=PT.COUNTERPARTY_ID
                LEFT OUTER JOIN FINANCIAL_TRANSACTIONS FT ON FT.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
                LEFT OUTER JOIN (
                SELECT S.SHIPMENT_ID, S.PRODUCT_TRANSACTION_ID,
                CASE 
                        WHEN S.ARRIVAL_DATE IS NULL THEN 'PENDING'
                        ELSE 'COMPLETED'
                END STATUS
                FROM SHIPMENTS S
                ) S2 ON S2.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
                WHERE FT.TYPE='CLIENT_ORDER_PAYMENT' AND O.ORGANIZATION_ID=:clientId
                ORDER BY PT.TRANSACTION_ID DESC
								
								
								SELECT DISTINCT PT.TRANSACTION_ID,O.NAME, PT.STATUS, FT.STATUS AS PAYMENT_STATUS, S2.STATUS AS SHIPMENT_STATUS
                FROM PRODUCT_TRANSACTIONS PT JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=PT.COUNTERPARTY_ID
                JOIN FINANCIAL_TRANSACTIONS FT ON FT.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
                JOIN (
                SELECT S.SHIPMENT_ID, S.PRODUCT_TRANSACTION_ID,
                CASE 
                        WHEN S.ARRIVAL_DATE IS NULL THEN 'PENDING'
                        ELSE 'COMPLETED'
                END STATUS
                FROM SHIPMENTS S
                ) S2 ON S2.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
                WHERE FT.TYPE='CLIENT_ORDER_PAYMENT'  AND
                                (
                                UPPER(O.NAME) LIKE :searchPattern OR
                                UPPER(PT.STATUS) LIKE :searchPattern OR
                                UPPER(FT.STATUS) LIKE :searchPattern OR
                                UPPER(S2.STATUS) LIKE :searchPattern
                                )
                ORDER BY PT.TRANSACTION_ID DESC
								
								
								SELECT DISTINCT PT.TRANSACTION_ID,PT.PICKUP_DATE,O.NAME, PT.STATUS, PT.COUNTERPARTY_ID AS CLIENT_ID
        FROM PRODUCT_TRANSACTIONS PT JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=PT.COUNTERPARTY_ID
        WHERE PT.TRANSACTION_ID=:transactionId`
				
				SELECT FT.METHOD, PI.ACCOUNT_NUMBER,PI.BANK_NAME, FT.AMOUNT,FT.STATUS
        FROM FINANCIAL_TRANSACTIONS FT JOIN PAYMENT_INFO PI ON FT.TO_ACCOUNT=PI.OWNER_ID
        WHERE FT.PRODUCT_TRANSACTION_ID=:transactionId AND TYPE= UPPER('CLIENT_ORDER_PAYMENT')
				
				SELECT O.NAME, L1.STREET_ADDRESS||', '||L1.CITY||'-'||L1.POSTAL_CODE||','||L1.COUNTRY AS PICK_UP_FROM, S.DEPARTURE_DATE,S.DEPARTURE_TIME,S.VEHICLE_NO,S.CURRENT_LOCATION,S.ARRIVAL_DATE,S.ARRIVAL_TIME,
        CASE 
                WHEN S.ARRIVAL_DATE IS NULL THEN 'PENDING'
                ELSE 'COMPLETED'
        END STATUS
        FROM SHIPMENTS S JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=S.TRANSPORT_COMPANY_ID
                JOIN LOCATIONS L1 ON S.START_LOCATION=L1.LOCATION_ID
        WHERE S.PRODUCT_TRANSACTION_ID=:transactionId
				
				SELECT P.PRODUCT_NAME,OP.PRICE/OP.QUANTITY AS PRICE_EACH,OP.QUANTITY
        FROM ORDER_PRODUCTS OP JOIN PRODUCTS P ON P.PRODUCT_ID=OP.PRODUCT_ID
        WHERE OP.ORDER_ID=:transactionId
				
				SELECT O.ORGANIZATION_ID,O.NAME
        FROM ORGANIZATIONS O
        WHERE O.TYPE='TRANSPORT'
				
				SELECT DISTINCT PT.TRANSACTION_ID,O.NAME, PT.STATUS, FT.STATUS AS PAYMENT_STATUS, S2.STATUS AS SHIPMENT_STATUS
            FROM PRODUCT_TRANSACTIONS PT LEFT OUTER JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=PT.COUNTERPARTY_ID
            LEFT OUTER JOIN FINANCIAL_TRANSACTIONS FT ON FT.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
            LEFT OUTER JOIN (
            SELECT S.SHIPMENT_ID, S.PRODUCT_TRANSACTION_ID,
            CASE 
                    WHEN S.ARRIVAL_DATE IS NULL THEN 'PENDING'
                    ELSE 'COMPLETED'
            END STATUS
            FROM SHIPMENTS S
            ) S2 ON S2.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
            WHERE FT.TYPE='CLIENT_ORDER_PAYMENT'
            ORDER BY PT.TRANSACTION_ID DESC
						
						SELECT C.CLIENT_ID, O.NAME, O.URL, STREET_ADDRESS||', '||CITY||'-'||POSTAL_CODE ADDRESS FROM
                ORGANIZATIONS O JOIN CLIENT_COMPANIES C ON (O.ORGANIZATION_ID=C.CLIENT_ID)
                LEFT OUTER JOIN LOCATIONS L ON (O.ORGANIZATION_ID=L.ORGANIZATION_ID)
                WHERE UPPER(NAME) LIKE :searchPattern OR UPPER(STREET_ADDRESS) LIKE :searchPattern OR 
                UPPER(POSTAL_CODE) LIKE :searchPattern 
                OR UPPER(CITY) LIKE :searchPattern
                OR UPPER(COUNTRY) LIKE :searchPattern OR UPPER(C.TYPE) LIKE :searchPattern
                OR UPPER(URL) LIKE :searchPattern
                OR UPPER(C.TYPE) LIKE :searchPattern
                ORDER BY O.ORGANIZATION_ID
								
								SELECT C.CLIENT_ID, O.NAME, O.URL, STREET_ADDRESS||', '||CITY||'-'||POSTAL_CODE ADDRESS FROM
                ORGANIZATIONS O JOIN CLIENT_COMPANIES C ON (O.ORGANIZATION_ID=C.CLIENT_ID)
                LEFT OUTER JOIN LOCATIONS L ON (O.ORGANIZATION_ID=L.ORGANIZATION_ID)
                ORDER BY O.ORGANIZATION_ID
								
								SELECT C.CLIENT_ID, O.NAME, O.URL, C.TYPE,STREET_ADDRESS||\', \'||CITY||\'-\'||POSTAL_CODE ADDRESS,P.ACCOUNT_NUMBER,P.ACCOUNT_HOLDER,P.BANK_NAME,P.IBAN FROM ORGANIZATIONS O JOIN CLIENT_COMPANIES C ON (O.ORGANIZATION_ID=C.CLIENT_ID) LEFT OUTER JOIN LOCATIONS L ON (O.ORGANIZATION_ID=L.ORGANIZATION_ID)  LEFT OUTER JOIN PAYMENT_INFO P ON (C.CLIENT_ID=P.OWNER_ID) WHERE C.CLIENT_ID=:clientId ORDER BY O.ORGANIZATION_ID
								
								SELECT * FROM LOGS LEFT OUTER JOIN ORGANIZATION_LOGS USING(LOG_ID) WHERE LOGS.TYPE = 'ORGANIZATION' ORDER BY TIMESTAMP_COL DESC
								
								SELECT * FROM LOGS LEFT OUTER JOIN TRANSACTION_LOGS USING(LOG_ID) WHERE LOGS.TYPE = 'PRODUCT_TRANSACTION' ORDER BY TIMESTAMP_COL DESC
								
								SELECT DISTINCT PT.TRANSACTION_ID,O.NAME,O.ORGANIZATION_ID AS SUPPLIER_ID, PT.STATUS, FT.STATUS AS PAYMENT_STATUS, S2.STATUS AS SHIPMENT_STATUS
                FROM PRODUCT_TRANSACTIONS PT JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=PT.COUNTERPARTY_ID
                JOIN FINANCIAL_TRANSACTIONS FT ON FT.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
                JOIN (
                SELECT S.SHIPMENT_ID, S.PRODUCT_TRANSACTION_ID,
                CASE 
                        WHEN S.ARRIVAL_DATE IS NULL THEN 'PENDING'
                        ELSE 'COMPLETED'
                END STATUS
                FROM SHIPMENTS S
                ) S2 ON S2.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
                WHERE FT.TYPE='PURCHASE_ORDER_PAYMENT' AND O.ORGANIZATION_ID=:supplierId
                ORDER BY PT.TRANSACTION_ID DESC
								
								SELECT DISTINCT PT.TRANSACTION_ID,O.NAME,O.ORGANIZATION_ID AS SUPPLIER_ID, PT.STATUS, FT.STATUS AS PAYMENT_STATUS, S2.STATUS AS SHIPMENT_STATUS
                FROM PRODUCT_TRANSACTIONS PT JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=PT.COUNTERPARTY_ID
                JOIN FINANCIAL_TRANSACTIONS FT ON FT.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
                JOIN (
                SELECT S.SHIPMENT_ID, S.PRODUCT_TRANSACTION_ID,
                CASE 
                        WHEN S.ARRIVAL_DATE IS NULL THEN 'PENDING'
                        ELSE 'COMPLETED'
                END STATUS
                FROM SHIPMENTS S
                ) S2 ON S2.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
                WHERE FT.TYPE='PURCHASE_ORDER_PAYMENT' AND
                (
                UPPER(O.NAME) LIKE :searchPattern OR
                UPPER(PT.STATUS) LIKE :searchPattern OR
                UPPER(FT.STATUS) LIKE :searchPattern OR
                UPPER(S2.STATUS) LIKE :searchPattern
                )
                ORDER BY PT.TRANSACTION_ID DESC
								
								SELECT DISTINCT PT.TRANSACTION_ID,O.NAME,O.ORGANIZATION_ID AS SUPPLIER_ID, PT.STATUS, FT.STATUS AS PAYMENT_STATUS, S2.STATUS AS SHIPMENT_STATUS
                FROM PRODUCT_TRANSACTIONS PT JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=PT.COUNTERPARTY_ID
                JOIN FINANCIAL_TRANSACTIONS FT ON FT.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
                JOIN (
                SELECT S.SHIPMENT_ID, S.PRODUCT_TRANSACTION_ID,
                CASE 
                        WHEN S.ARRIVAL_DATE IS NULL THEN 'PENDING'
                        ELSE 'COMPLETED'
                END STATUS
                FROM SHIPMENTS S
                ) S2 ON S2.PRODUCT_TRANSACTION_ID=PT.TRANSACTION_ID
                WHERE FT.TYPE='PURCHASE_ORDER_PAYMENT'
                ORDER BY PT.TRANSACTION_ID DESC
								
								SELECT O.ORGANIZATION_ID,O.NAME
                FROM ORGANIZATIONS O
                WHERE O.TYPE='SUPPLIER'
								
								SELECT DISTINCT PT.TRANSACTION_ID,PT.PICKUP_DATE,O.NAME, PT.STATUS
        FROM PRODUCT_TRANSACTIONS PT JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=PT.COUNTERPARTY_ID
        WHERE PT.TRANSACTION_ID=:transactionId
				
				SELECT FT.METHOD, PI.ACCOUNT_NUMBER,PI.BANK_NAME, FT.AMOUNT,FT.STATUS
        FROM FINANCIAL_TRANSACTIONS FT JOIN PAYMENT_INFO PI ON FT.TO_ACCOUNT=PI.OWNER_ID
        WHERE FT.PRODUCT_TRANSACTION_ID=:transactionId AND TYPE= UPPER('PURCHASE_ORDER_PAYMENT')
				
				SELECT O.NAME, L1.STREET_ADDRESS||', '||L1.CITY||'-'||L1.POSTAL_CODE||','||L1.COUNTRY AS PICK_UP_FROM, S.DEPARTURE_DATE,S.DEPARTURE_TIME,S.VEHICLE_NO,S.CURRENT_LOCATION,S.ARRIVAL_DATE,S.ARRIVAL_TIME,
        CASE 
                WHEN S.ARRIVAL_DATE IS NULL THEN 'PENDING'
                ELSE 'COMPLETED'
        END STATUS
        FROM SHIPMENTS S JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=S.TRANSPORT_COMPANY_ID
                JOIN LOCATIONS L1 ON S.START_LOCATION=L1.LOCATION_ID
        WHERE S.PRODUCT_TRANSACTION_ID=:transactionId
				
				
				SELECT P.PRODUCT_NAME,OP.PRICE/OP.QUANTITY AS PRICE_EACH,OP.QUANTITY
        FROM ORDER_PRODUCTS OP JOIN PRODUCTS P ON P.PRODUCT_ID=OP.PRODUCT_ID
        WHERE OP.ORDER_ID=:transactionId
				
				SELECT S.SUPPLIER_ID, O.NAME,L2.STREET_ADDRESS||','||L2.CITY||'-'||L2.POSTAL_CODE||','||L2.COUNTRY PICKUP_LOCATION,P.ID,P.ACCOUNT_NUMBER,P.ACCOUNT_HOLDER,P.BANK_NAME, L2.LOCATION_ID
        FROM ORGANIZATIONS O JOIN SUPPLIERS S ON (O.ORGANIZATION_ID=S.SUPPLIER_ID) 
            LEFT OUTER JOIN LOCATIONS L2 ON (O.ORGANIZATION_ID=L2.ORGANIZATION_ID AND (UPPER(L2.TYPE) IN ('DUAL','PICKUP')))  
            LEFT OUTER JOIN PAYMENT_INFO P ON (S.SUPPLIER_ID=P.OWNER_ID) 
        WHERE S.SUPPLIER_ID=:supplierId
				
				SELECT L2.LOCATION_ID
        FROM ORGANIZATIONS O  
            LEFT OUTER JOIN LOCATIONS L2 ON (O.ORGANIZATION_ID=L2.ORGANIZATION_ID AND (UPPER(L2.TYPE) IN ('DUAL','PICKUP'))) 
        WHERE O.TYPE='CENTRAL'
				
				
				SELECT *
        FROM SUPPLIER_PRODUCT SP JOIN products P ON (SP.PRODUCT_ID=P.PRODUCT_ID) WHERE SP.SUPPLIER_ID=:supplierId
        ORDER BY p.product_id
				
				
				SELECT O.ORGANIZATION_ID,O.NAME
        FROM ORGANIZATIONS O
        WHERE O.TYPE='TRANSPORT'
				
				SELECT *
                FROM products
                WHERE upper(category) = upper(:category)
                ORDER BY product_id`
								
								
				SELECT * FROM PRODUCTS P2 WHERE P2.PRODUCT_ID IN
                (SELECT DISTINCT P1.PRODUCT_ID FROM PRODUCTS P1 
                LEFT OUTER JOIN PRODUCT_FEATURES PF ON (P1.PRODUCT_ID = PF.PRODUCT_ID) 
                LEFT OUTER JOIN FEATURE_NAMES FN ON (PF.FEATURE_ID = FN.FEATURE_ID)
                WHERE UPPER(P1.PRODUCT_NAME) LIKE UPPER(:searchPattern) OR UPPER(P1.CATEGORY) LIKE UPPER(:searchPattern) OR UPPER(P1.MANUFACTURER_ID) LIKE UPPER(:searchPattern)
                OR UPPER(PF.VALUE) LIKE UPPER(:searchPattern) OR UPPER(FN.FEATURE_NAME) LIKE UPPER(:searchPattern)
                )
                ORDER BY P2.PRODUCT_ID
								
								
								SELECT *
                FROM products WHERE CENTRAL_STOCK<>0
                ORDER BY product_id
								
								
								SELECT *
                FROM products WHERE CENTRAL_STOCK=0
                ORDER BY product_id
								
								SELECT *
                FROM products
                ORDER BY product_id
								
								SELECT DISTINCT CATEGORY
            FROM products
            ORDER BY CATEGORY
						
						SELECT * FROM PRODUCTS WHERE PRODUCT_ID=:productId
						
						
						SELECT SP.SUPPLIER_ID SUPPLIER_ID, O.NAME SUPPLIER_NAME,SP.WHOLESALE_PRICE OFFERING_PRICE, S.AVG_DELIVERY_TIME AVG_DELIVERY_TIME FROM  SUPPLIER_PRODUCT SP  JOIN ORGANIZATIONS O ON (SP.SUPPLIER_ID=O.ORGANIZATION_ID) JOIN SUPPLIERS S ON (O.ORGANIZATION_ID=S.SUPPLIER_ID) WHERE SP.PRODUCT_ID=:productId
						
						SELECT * FROM PRODUCT_FEATURES PF JOIN FEATURE_NAMES FN ON (PF.FEATURE_ID=FN.FEATURE_ID) WHERE PF.PRODUCT_ID=:productId
						
						SELECT S.SUPPLIER_ID, O.NAME, O.URL,S.AVG_DELIVERY_TIME, L1.STREET_ADDRESS||', '||L1.CITY||'-'||L1.POSTAL_CODE||','||L1.COUNTRY ADDRESS,L2.STREET_ADDRESS||', '||L2.CITY||'-'||L2.POSTAL_CODE||','||L2.COUNTRY PICKUP_LOCATION  FROM
                ORGANIZATIONS O JOIN SUPPLIERS S ON (O.ORGANIZATION_ID=S.SUPPLIER_ID)
                LEFT OUTER JOIN LOCATIONS L1 ON (O.ORGANIZATION_ID=L1.ORGANIZATION_ID AND (UPPER(L1.TYPE) IN ('DUAL','ADDRESS')))
                LEFT OUTER JOIN LOCATIONS L2 ON (O.ORGANIZATION_ID=L2.ORGANIZATION_ID AND (UPPER(L2.TYPE) IN ('DUAL','PICKUP')))
                WHERE UPPER(NAME) LIKE :searchPattern OR UPPER(l1.STREET_ADDRESS) LIKE :searchPattern OR 
                UPPER(L1.POSTAL_CODE) LIKE :searchPattern 
                OR UPPER(L1.CITY) LIKE :searchPattern
                OR UPPER(L1.COUNTRY) LIKE :searchPattern
                OR UPPER(l2.STREET_ADDRESS) LIKE :searchPattern OR 
                UPPER(L2.POSTAL_CODE) LIKE :searchPattern 
                OR UPPER(L2.CITY) LIKE :searchPattern
                OR UPPER(L2.COUNTRY) LIKE :searchPattern
                OR UPPER(URL) LIKE :searchPattern
                ORDER BY O.ORGANIZATION_ID
								
								
								SELECT S.SUPPLIER_ID, O.NAME, O.URL,S.AVG_DELIVERY_TIME, L1.STREET_ADDRESS||', '||L1.CITY||'-'||L1.POSTAL_CODE||','||L1.COUNTRY ADDRESS,L2.STREET_ADDRESS||', '||L2.CITY||'-'||L2.POSTAL_CODE||','||L2.COUNTRY PICKUP_LOCATION  FROM
                ORGANIZATIONS O JOIN SUPPLIERS S ON (O.ORGANIZATION_ID=S.SUPPLIER_ID)
                LEFT OUTER JOIN LOCATIONS L1 ON (O.ORGANIZATION_ID=L1.ORGANIZATION_ID AND (UPPER(L1.TYPE) IN ('DUAL','ADDRESS')))
                LEFT OUTER JOIN LOCATIONS L2 ON (O.ORGANIZATION_ID=L2.ORGANIZATION_ID AND (UPPER(L2.TYPE) IN ('DUAL','PICKUP')))
                ORDER BY O.ORGANIZATION_ID
								
								SELECT S.SUPPLIER_ID, O.NAME, O.URL,S.AVG_DELIVERY_TIME, L1.STREET_ADDRESS||\',\'||L1.CITY||\'-\'||L1.POSTAL_CODE||\',\'||L1.COUNTRY ADDRESS,L2.STREET_ADDRESS||\',\'||L2.CITY||\'-\'||L2.POSTAL_CODE||\',\'||L2.COUNTRY PICKUP_LOCATION,P.ACCOUNT_NUMBER,P.ACCOUNT_HOLDER,P.BANK_NAME,P.IBAN  FROM ORGANIZATIONS O JOIN SUPPLIERS S ON (O.ORGANIZATION_ID=S.SUPPLIER_ID) LEFT OUTER JOIN LOCATIONS L1 ON (O.ORGANIZATION_ID=L1.ORGANIZATION_ID AND (UPPER(L1.TYPE) IN (\'DUAL\',\'ADDRESS\'))) LEFT OUTER JOIN LOCATIONS L2 ON (O.ORGANIZATION_ID=L2.ORGANIZATION_ID AND (UPPER(L2.TYPE) IN (\'DUAL\',\'PICKUP\'))) LEFT OUTER JOIN PAYMENT_INFO P ON (S.SUPPLIER_ID=P.OWNER_ID) WHERE S.SUPPLIER_ID=:supplierId ORDER BY S.SUPPLIER_ID
								
								SELECT * 
                FROM SUPPLIER_PRODUCT SP1 JOIN PRODUCTS P ON (SP1.PRODUCT_ID=P.PRODUCT_ID)  where p.PRODUCT_ID IN (
                SELECT DISTINCT P2.PRODUCT_ID FROM PRODUCTS P2
                WHERE upper(p2.category) = upper(:category)) AND SP1.SUPPLIER_ID=:supplierId
                ORDER BY P.product_id
								
								
								SELECT * FROM SUPPLIER_PRODUCT SP2 JOIN PRODUCTS P2 ON (SP2.PRODUCT_ID=P2.PRODUCT_ID) WHERE P2.PRODUCT_ID IN
                (SELECT DISTINCT P1.PRODUCT_ID FROM SUPPLIER_PRODUCT SP1 
                JOIN PRODUCTS P1 ON (SP1.PRODUCT_ID=P1.PRODUCT_ID) 
                LEFT OUTER JOIN PRODUCT_FEATURES PF ON (P1.PRODUCT_ID = PF.PRODUCT_ID) 
                LEFT OUTER JOIN FEATURE_NAMES FN ON (PF.FEATURE_ID = FN.FEATURE_ID)
                WHERE SP1.SUPPLIER_ID=:supplierId AND
                (UPPER(P1.PRODUCT_NAME) LIKE UPPER(:searchPattern) OR UPPER(P1.CATEGORY) LIKE UPPER(:searchPattern) OR UPPER(P1.MANUFACTURER_ID) LIKE UPPER(:searchPattern)
                OR UPPER(PF.VALUE) LIKE UPPER(:searchPattern) OR UPPER(FN.FEATURE_NAME) LIKE UPPER(:searchPattern))
                ) AND SP2.SUPPLIER_ID=:supplierId
    ORDER BY P2.PRODUCT_ID
		
		
		SELECT *
                FROM SUPPLIER_PRODUCT SP2 JOIN PRODUCTS P ON (SP2.PRODUCT_ID=P.PRODUCT_ID) where p.PRODUCT_ID IN (
                    SELECT DISTINCT P2.PRODUCT_ID FROM SUPPLIER_PRODUCT SP JOIN PRODUCTS P2 ON (SP.PRODUCT_ID=P2.PRODUCT_ID) 
                WHERE p2.central_stock<>0 AND SP.SUPPLIER_ID=:supplierId) AND SP2.SUPPLIER_ID=:supplierId
                ORDER BY P.product_id
								
								
								SELECT *
                FROM SUPPLIER_PRODUCT SP2 JOIN PRODUCTS P ON (SP2.PRODUCT_ID=P.PRODUCT_ID) where p.PRODUCT_ID IN (
                    SELECT DISTINCT P2.PRODUCT_ID FROM SUPPLIER_PRODUCT SP JOIN PRODUCTS P2 ON (SP.PRODUCT_ID=P2.PRODUCT_ID) 
                WHERE p2.central_stock=0 AND SP.SUPPLIER_ID=:supplierId) AND SP2.SUPPLIER_ID=:supplierId
                ORDER BY P.product_id
								
								
								SELECT *
                FROM SUPPLIER_PRODUCT SP JOIN products P ON (SP.PRODUCT_ID=P.PRODUCT_ID) WHERE SP.SUPPLIER_ID=:supplierId
                ORDER BY p.product_id
								
								SELECT *
                FROM products
                WHERE upper(category) = upper(:category) AND PRODUCT_ID NOT IN (SELECT SP.PRODUCT_ID FROM SUPPLIER_PRODUCT SP WHERE SP.SUPPLIER_ID=:supplierId )
                ORDER BY product_id
								
								
								SELECT * FROM PRODUCTS P2 WHERE P2.PRODUCT_ID IN
                (SELECT DISTINCT P1.PRODUCT_ID FROM PRODUCTS P1 
                LEFT OUTER JOIN PRODUCT_FEATURES PF ON (P1.PRODUCT_ID = PF.PRODUCT_ID) 
                LEFT OUTER JOIN FEATURE_NAMES FN ON (PF.FEATURE_ID = FN.FEATURE_ID)
                WHERE UPPER(P1.PRODUCT_NAME) LIKE UPPER(:searchPattern) OR UPPER(P1.CATEGORY) LIKE UPPER(:searchPattern) OR UPPER(P1.MANUFACTURER_ID) LIKE UPPER(:searchPattern)
                OR UPPER(PF.VALUE) LIKE UPPER(:searchPattern) OR UPPER(FN.FEATURE_NAME) LIKE UPPER(:searchPattern)
                )
                ORDER BY P2.PRODUCT_ID
								
								
								SELECT *
                FROM products P WHERE P.PRODUCT_ID NOT IN (SELECT SP.PRODUCT_ID FROM SUPPLIER_PRODUCT SP WHERE SP.SUPPLIER_ID=:supplierId)
                ORDER BY product_id
								
								SELECT *
                FROM SUPPLY_REQUESTS SR JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=SR.BRANCH_ID
                WHERE O.ORGANIZATION_ID=:branchId
                ORDER BY SR.PLACEMENT_DATE, SR.DEADLINE
								
								SELECT *
                FROM SUPPLY_REQUESTS SR JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=SR.BRANCH_ID
                WHERE UPPER(O.NAME) LIKE :searchPattern OR
                UPPER(SR.STATUS) LIKE :searchPattern
                ORDER BY SR.PLACEMENT_DATE, SR.DEADLINE
								
								SELECT *
            FROM SUPPLY_REQUESTS SR JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=SR.BRANCH_ID
            ORDER BY SR.PLACEMENT_DATE, SR.DEADLINE
						
						SELECT *
        FROM SUPPLY_REQUESTS SR JOIN ORGANIZATIONS O ON O.ORGANIZATION_ID=SR.BRANCH_ID
        WHERE SR.REQUEST_ID= :requestId
				
				
				SELECT REQ.PRODUCT_ID,P.PRODUCT_NAME,REQ.QUANTITY_REQUESTED,( REQ.QUANTITY_REQUESTED-NVL(CONFIRM.QUANTITY_DELIVERED, 0) ) AS QUANTITY_LEFT, P.CENTRAL_STOCK
        FROM 
        (
        SELECT SRP.PRODUCT_ID,SRP.QUANTITY AS QUANTITY_REQUESTED
        FROM SUPPLY_REQUEST_PRODUCTS SRP
        WHERE SRP.REQUEST_ID= :requestId 
        ) REQ LEFT OUTER JOIN
        (
        SELECT CSP.PRODUCT_ID, SUM(CSP.QUANTITY) AS QUANTITY_DELIVERED
        FROM CONFIRMED_SUPPLY_PRODUCTS CSP JOIN CONFIRMED_SUPPLY CS ON CS.SUPPLY_ID=CSP.SUPPLY_ID
        WHERE CS.REQUEST_ID= :requestId
        GROUP BY CSP.PRODUCT_ID
        ) CONFIRM ON REQ.PRODUCT_ID=CONFIRM.PRODUCT_ID  
        LEFT OUTER JOIN PRODUCTS P ON REQ.PRODUCT_ID=P.PRODUCT_ID
				
				SELECT PT.TRANSACTION_ID, PT.PICKUP_DATE,PT.STATUS
        FROM CONFIRMED_SUPPLY CS JOIN SUPPLY_REQUESTS SR ON SR.REQUEST_ID=CS.REQUEST_ID 
                JOIN PRODUCT_TRANSACTIONS PT ON PT.TRANSACTION_ID=CS.SUPPLY_ID
        WHERE SR.REQUEST_ID=:requestId
        ORDER BY PT.TRANSACTION_ID
				
				SELECT O.ORGANIZATION_ID,O.NAME
        FROM ORGANIZATIONS O
        WHERE O.TYPE='TRANSPORT'
				
				
				SELECT T.COMPANY_ID, O.NAME, O.URL, STREET_ADDRESS||', '||CITY||'-'||POSTAL_CODE ADDRESS,T.CAPACITY FROM
                ORGANIZATIONS O JOIN TRANSPORT_COMPANIES T ON (O.ORGANIZATION_ID=T.COMPANY_ID)
                LEFT OUTER JOIN LOCATIONS L ON (O.ORGANIZATION_ID=L.ORGANIZATION_ID)
                WHERE UPPER(O.NAME) LIKE :searchPattern OR UPPER(STREET_ADDRESS) LIKE :searchPattern OR UPPER(CITY) LIKE :searchPattern
                OR UPPER(POSTAL_CODE) LIKE :searchPattern
                OR UPPER(COUNTRY) LIKE :searchPattern
                OR UPPER(CITY) LIKE :searchPattern
                OR UPPER(URL) LIKE :searchPattern
                ORDER BY O.ORGANIZATION_ID
								
								
								SELECT T.COMPANY_ID, O.NAME, O.URL, STREET_ADDRESS||', '||CITY||'-'||POSTAL_CODE ADDRESS,T.CAPACITY FROM
                ORGANIZATIONS O JOIN TRANSPORT_COMPANIES T ON (O.ORGANIZATION_ID=T.COMPANY_ID)
                LEFT OUTER JOIN LOCATIONS L ON (O.ORGANIZATION_ID=L.ORGANIZATION_ID)
                ORDER BY O.ORGANIZATION_ID
								
								
								SELECT T.COMPANY_ID,O.NAME, STREET_ADDRESS||\', \'||CITY||\'-\'||POSTAL_CODE ADDRESS,T.CAPACITY,P.ACCOUNT_NUMBER,P.ACCOUNT_HOLDER,P.BANK_NAME,P.IBAN FROM ORGANIZATIONS O JOIN TRANSPORT_COMPANIES T ON (O.ORGANIZATION_ID=T.COMPANY_ID) LEFT OUTER JOIN LOCATIONS L ON (O.ORGANIZATION_ID=L.ORGANIZATION_ID) LEFT OUTER JOIN PAYMENT_INFO P ON (T.COMPANY_ID=P.OWNER_ID) WHERE T.COMPANY_ID=:companyId ORDER BY T.COMPANY_ID